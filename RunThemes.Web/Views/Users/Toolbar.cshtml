@using NearForums.Web.Extensions
@model RunThemes.Data.Models.User
@{
}
@if (ViewData.GetDefault<bool>("CanModerate"))
{
	<div class="toolbar floatContainer">
		<ul>
			@if (!Model.Banned)
			{
				<li class="moderate"><a href="#" onclick="$('#userModerateForm').slideToggle();return false;">@string.Format("Moderate")</a></li>
			}
		</ul>
	</div>
	<div id="userModerateForm" style="display:none;">
		<form>
			@Html.AntiForgeryToken()
			@Html.Hidden("id", Model.Id)
			<div class="formItem floatContainer">
				<label for="moderationAction">@string.Format("Moderation action")</label>
				<select id="moderationAction">
					@if ((!Model.Warned) && (!Model.Suspended) && (!Model.Banned))
					{
						<option value="warn">@string.Format("Warn")</option>
					}
					@if ((!Model.Suspended) && (!Model.Banned))
					{
						<option value="suspend">@string.Format("Suspend")</option>
					}
					@if (!Model.Banned)
					{
						<option value="ban">@string.Format("Ban")</option>
					}
				</select>
			</div>
			<div class="formItem textarea floatContainer">
				<label for="reasonText">@string.Format("Reason message")</label>
				@Html.TextArea("reasonText")
			</div>
			<div><input type="button" class="button" value="@string.Format("Submit")" onclick="submitModeration(this);" /></div>
		</form>
	</div>
	<script type="text/javascript">
		function submitModeration(sender)
		{
			var urls = {};
			urls.warn = '@Url.Action("Warn", "Users")';
			urls.suspend = '@Url.Action("Suspend", "Users")';
			urls.ban = '@Url.Action("Ban", "Users")';
			var data = $(sender).closest("form").serializeObject();
			var url = urls[$("#moderationAction").val()];
			$("#userModerateForm").find('input, textarea, button, select').prop("disabled",true);
			$.post(url, data, function(message){
				location.reload();
			});
		}
		$(function(){
			$("#userModerateForm").find('input, textarea, button, select').prop("disabled",false);
		});
	</script>
}